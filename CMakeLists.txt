cmake_minimum_required(VERSION 3.16.3)
project(ethercat)
find_package(soem)
find_package (Eigen3 3.3 REQUIRED NO_MODULE)
find_package(PkgConfig)
pkg_check_modules(GTKMM gtkmm-3.0) # look into FindPkgConfig.cmake, 
link_directories(${GTKMM_LIBRARY_DIRS})
include_directories(${GTKMM_INCLUDE_DIRS})

# Add the include directory to the compiler's search path
include_directories(include)

if(soem_FOUND)
    message("SOEM library found")
    add_executable(Test src/EthercatTest.cpp)
    add_executable(QrobTest src/EthercatQrobOriginalCode.cpp)
    add_executable(CubeMarsMultiTest src/EthercatCubemarsMultiTest.cpp)
    add_executable(CubeMarsSingleTest src/EthercatCubemarsSingleTest.cpp)
    add_executable(CubeMarsOldCST src/EthercatCubemarsOLD.cpp)
    add_executable(DiewuIOTest src/diewuIOBox.cpp)
    add_executable(SlaveInfo src/SlaveInfo.cpp)
    add_executable(QrobTestwLibrary src/QrobMotorTest.cpp)
    add_executable(RobotGUI src/robotGUI.cpp)
    add_executable(WMAR_IK src/WMARInverseKinematics.cpp)
    add_executable(TestDataLogger src/testDataLogger.cpp)
    target_link_libraries(RobotGUI soem ${GTKMM_LIBRARIES} Eigen3::Eigen)
    target_compile_options(RobotGUI PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_compile_options(Test PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(Test soem Eigen3::Eigen)
    target_compile_options(QrobTest PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(QrobTest soem Eigen3::Eigen)
    target_compile_options(CubeMarsMultiTest PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(CubeMarsMultiTest soem Eigen3::Eigen)
    target_compile_options(CubeMarsSingleTest PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(CubeMarsSingleTest soem Eigen3::Eigen)
    target_compile_options(CubeMarsOldCST PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(CubeMarsOldCST soem Eigen3::Eigen)
    target_compile_options(DiewuIOTest PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(DiewuIOTest soem Eigen3::Eigen)
    target_compile_options(SlaveInfo PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(SlaveInfo soem Eigen3::Eigen)
    target_compile_options(QrobTestwLibrary PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(QrobTestwLibrary soem Eigen3::Eigen)
    target_compile_options(WMAR_IK PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(WMAR_IK soem Eigen3::Eigen)
    target_compile_options(TestDataLogger PUBLIC -std=c++11 -fpermissive -w -Wall )
    target_link_libraries(TestDataLogger soem Eigen3::Eigen)

    target_include_directories(RobotGUI PRIVATE ${GTKMM_INCLUDE_DIRS})
    target_link_directories(RobotGUI PRIVATE ${GTKMM_LIBRARY_DIRS})
else()
    message("SOEM library not found")
endif()

